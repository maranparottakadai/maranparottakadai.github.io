AIM:
  To write a C program to implement SJF (Shortest Job First) scheduling.

ALGORITHM:
  1. Read the number of processes.
  2. Read process name and burst time for each process.
  3. Sort the processes in the ready queue according to burst time. CPU schedules the process with the shortest burst time first, followed by other processes.
  4. Set the waiting time (WT) of the first process as zero and turnaround time (TAT) as burst time.
  5. Calculate waiting time and turnaround time of other processes as follows:
     - \( P_i (\text{WT}) = P_{i-1}(\text{WT}) + P_{i-1}(\text{BT}) \)
     - \( P_i (\text{TAT}) = P_i (\text{BT}) + P_i (\text{WT}) \)
  6. Calculate and display average WT and TAT.
  7. Display the order of execution of processes, i.e., process name, burst time, WT, and TAT.

PROGRAM:
#include <stdio.h>

int main() {
    int bt[20], p[20], wt[20], tat[20], i, j, n, total = 0, totalT = 0, pos, temp;
    float avg_wt, avg_tat;

    printf("Enter number of processes: ");
    scanf("%d", &n);

    printf("\nEnter Burst Time:\n");
    for (i = 0; i < n; i++) {
        printf("p%d: ", i + 1);
        scanf("%d", &bt[i]);
        p[i] = i + 1; 
    }

    for (i = 0; i < n; i++) {
        pos = i;
        for (j = i + 1; j < n; j++) {
            if (bt[j] < bt[pos]) {
                pos = j;
            }
        }

        temp = bt[i];
        bt[i] = bt[pos];
        bt[pos] = temp;

        temp = p[i];
        p[i] = p[pos];
        p[pos] = temp;
    }

    wt[0] = 0; 

    for (i = 1; i < n; i++) {
        wt[i] = 0;
        for (j = 0; j < i; j++) {
            wt[i] += bt[j];
        }
        total += wt[i]; 
    }

    avg_wt = (float)total / n; 

    printf("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time");
    for (i = 0; i < n; i++) {
        tat[i] = bt[i] + wt[i]; 
        totalT += tat[i]; 
        printf("\np%d\t\t%d\t\t%d\t\t\t%d", p[i], bt[i], wt[i], tat[i]);
    }

    avg_tat = (float)totalT / n; 

    printf("\n\nAverage Waiting Time = %f", avg_wt);
    printf("\nAverage Turnaround Time = %f", avg_tat);

    return 0;
}

OUTPUT:
[root@srmist ~]$ gcc -o a.out sjfAlgo.c
[root@srmist ~]$ ./a.out
Enter number of processes: 3

Enter Burst Time:
p1: 6
p2: 8
p3: 7

Process    Burst Time    Waiting Time    Turnaround Time
p1              6                0                    6
p3              7                6                   13
p2              8               13                   21

Average Waiting Time = 6.333333
Average Turnaround Time = 13.333333